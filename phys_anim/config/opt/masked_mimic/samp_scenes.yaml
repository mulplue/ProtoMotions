# @package _global_

algo:
  config:
    models:
      pointcloud_input_size: ${eval:${oc.select:scene_lib.max_objects_per_scene,1}*${env.config.point_cloud_obs.num_features_per_object}}

      object_pointclouds_mask_model:
        _target_: phys_anim.agents.models.common.Flatten
        config:
          normalize_obs: False
          obs_clamp_value: null
          dtype: bool
        num_in: ${oc.select:scene_lib.max_objects_per_scene,1}
        num_out: ${.num_in}

      transformer_object_pointclouds_model:
        _target_: phys_anim.agents.models.pointcloud.DGCNN
        config:
          normalize_obs: False
          obs_clamp_value: null
          emb_dims: 128
          num_neighbours: 10
          num_contact_bodies: ${len:${robot.contact_bodies}}
          max_num_objects: ${oc.select:scene_lib.max_objects_per_scene,1}
          encoder_input_dim: ${env.config.point_cloud_obs.num_features_per_object}
          mask_key: object_pointclouds_mask
          mask_valid_as_zeros: False
          operations:
          # Input is [envs, objects, steps, features], flattened to [envs, -1]
            - type: reshape
              new_shape:
                - -1
                - ${env.config.point_cloud_obs.num_features_per_object}
            - type: encode
            - type: reshape
              new_shape:
                - batch_size
                - ${oc.select:scene_lib.max_objects_per_scene,1}
                - ${algo.config.models.transformer_object_pointclouds_model.num_out}
        num_in: ${algo.config.models.pointcloud_input_size}
        num_out: ${algo.config.actor.config.mu_model.config.transformer_token_size}

      prior_pre_processor:
        config:
          extra_inputs:
            object_pointclouds: ${algo.config.models.transformer_object_pointclouds_model}
            object_pointclouds_mask: ${algo.config.models.object_pointclouds_mask_model}

    extra_inputs:
      object_pointclouds:
        retrieve_from_env: True
        dtype: float
        size: ${algo.config.models.transformer_object_pointclouds_model.num_in}
      object_pointclouds_mask:
        retrieve_from_env: True
        dtype: bool
        size: ${algo.config.models.object_pointclouds_mask_model.num_in}

env:
  config:
    point_cloud_obs:
      enabled: True
      # No object identity for now as we have a single object per scene
